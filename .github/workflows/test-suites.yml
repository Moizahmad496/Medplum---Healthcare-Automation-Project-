name: Cypress Tests

# When to run this workflow
on:
  push:
    branches: [ "main" ]    # Runs on push to main branch
  pull_request:
    branches: [ "main" ]    # Runs on PR to main branch

jobs:
  cypress-run:
    runs-on: ubuntu-latest   # GitHub provides Linux VM

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Make Cypress binary executable
        run: chmod +x node_modules/.bin/cypress

      # Step 4: Run Cypress tests
      - name: Run Cypress tests
        run: npx cypress run --spec "cypress/e2e/register.cy.js,cypress/e2e/login.cy.js,cypress/e2e/create_patient.cy.js"

      # (Optional) Upload screenshots if tests fail
      - name: Upload Cypress screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots

      # (Optional) Upload Cypress videos always
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      # - uses: SonarSource/sonarqube-quality-gate-action@v1
      #   timeout-minutes: 5
      #   env:
      #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

